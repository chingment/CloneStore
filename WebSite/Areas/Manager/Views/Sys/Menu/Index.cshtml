@model WebSite.Areas.Manager.Models.SysMenuViewModel
@{
    ViewBag.Title = "Menus Setting";
    Layout = "~/Areas/Manager/Views/Shared/_LayoutTree.cshtml";
}

@section scripts{
    <script type="text/javascript">
     <!--
        //设置菜单树形属性
        var setting = {
            view: {
                showLine: true,
                selectedMulti: false
            },
            data: {
                simpleData: {
                    enable: true
                },
                key: {
                    url:"_url"
                }
            },
            callback: {
                onClick: onClick
            },
            async: {
                url:""
            }

        };

        var num = 0;
        var maxMum = 2;
        function getChildNodeGrade(treeNode) {
            var p = treeNode.getParentNode();
            if (p != null) {
                num += 1;
                getChildNodeGrade(p);
            }
        }


        function onClick(event, treeId, treeNode, clickFlag) {
            $("#txt_PName").defaultPassed();
            $("#txt_Name").defaultPassed();

            var parentName = "/";
            if (treeNode.getParentNode() != null) {
                parentName = treeNode.getParentNode().name;
                $(".a-btn-del").show();
            }
            else {
                $(".a-btn-del").hide();
            }

            /*最大支持几级菜单由maxMum决定 可修改这个值*/
            num = 0;
            getChildNodeGrade(treeNode);
            if (num >= maxMum) {
                $(".a-btn-add").hide();
            }
            else {
                $(".a-btn-add").show();
            }


            $.lumos.post({
                url:  "../Menu/GetMenuDetail",
                data: { menuId: treeNode.id },
                success: function (data) {

                    if (data.result == "Success") {
                        $("#lbl_PName").text(parentName);
                        $("#txt_PName").val(parentName);

                        var menu = data.content.Menu;

                        $("#txt_Name").val(menu.Name);
                        $("#txt_Url").val(menu.Url);
                        $("#txt_Description").val(menu.Description);


                        $("input[name=cb_Permission]").attr("checked", false);

                        var menuPermission = data.content.MenuPermission

                        for (var i = 0; i < menuPermission.length; i++) {
                            $("input[name=cb_Permission][value=" + menuPermission[i].PermissionId + "]").attr("checked", true);
                        }
                    }
                }
            });

        }

        var treeControlID = "treemenu";
        $(this).ready(function () {

            loadTreeList();

            //表单验证处理
            $.formValidator.initConfig({ formID: "form1", onError: function (msg) { art.dialog.alert(msg); }, onSuccess: function () { return edit(); } });
            $("#txt_PName").formValidator({ onShow: "Please select a node on the left!", onFocus: "Please select a node on the left!", onCorrect: "&nbsp;" }).inputValidator({ min: 1, onError: "Please select a node on the left!" });
            $("#txt_Name").formValidator({ onShow: "Required!", onFocus: "Required,and no more than 50 characters！", onCorrect: "&nbsp;" }).inputValidator({ min: 1, max: 50, empty: { leftEmpty: false, emptyError: "Required!" }, onError: "Required,and no more than 50 characters！" });
            $("#txt_Url").formValidator().inputValidator({ min: 0, max: 250, onError: "Url is no more than 250 characters!" });
            $("#txt_Description").formValidator().inputValidator({ min: 0, max: 500, onError: "Remark is no more than 500 characters!" });

            //处理添加按钮
            $("#abtn_Add").click(function () {
                var treeObj = $.fn.zTree.getZTreeObj(treeControlID).getSelectedNodes();
                if ($.lumos.common.isNullOrEmpty(treeObj)) {
                    art.dialog.alert("Please select a node on the left!");
                    return;
                }


                $.lumos.openWin(this, '../Menu/Add?id=' + treeObj[0].id + '&pName=' + escape(treeObj[0].name), 'Add Menu', '700px', '300px');

            });


            $("#abtn-Sort").click(function () {
                var treeObj = $.fn.zTree.getZTreeObj(treeControlID).getSelectedNodes();
                if ($.lumos.common.isNullOrEmpty(treeObj)) {
                    art.dialog.alert("Please select a node on the left!");
                    return;
                }
                if (typeof treeObj[0].children == "undefined") {
                    art.dialog.alert("The node does not have a child node");
                    return;
                }
                $.lumos.openWin(this, '../Menu/Sort?id=' + treeObj[0].id + '&pName=' + escape(treeObj[0].name), 'Modified Sort', '650px', '420px');

            });

            //处理删除按钮
            $("#abtn_Del").click(function () {
                var treeObj = $.fn.zTree.getZTreeObj(treeControlID).getSelectedNodes();
                if ($.lumos.common.isNullOrEmpty(treeObj)) {
                    art.dialog.alert("Please select a node on the left!");
                    return;
                }

                var l_txt = $("#txt_PName").val();
                if (l_txt == "/") {
                    art.dialog.alert("Root node cannot be deleted!");
                    return;
                }

                art.dialog.confirm(
                    "Confirm delete [" + treeObj[0].name + "] the node and its children？",
                    function () {
                        var id = treeObj[0].id;
                        var ids = [];
                        ids = getChildrenIds(ids, treeObj[0])
                        $.lumos.post({
                            url: "../Menu/RemoveMenu",
                            data: { menuIds: ids },
                            success: function (data) {
                                art.dialog.alert(data.message);
                                loadTreeList(id);
                            }
                        });
                        return true;
                    });
                return false;
            });


        });



        function getChildrenIds(ids, treeNode) {
            ids.push(treeNode.id);//选中节点id，即父节点id
            if (treeNode.isParent) {
                for (var obj in treeNode.children) {
                    getChildrenIds(ids, treeNode.children[obj]);
                }
            }
            return ids;
        }

        function edit() {
            var treeObj = $.fn.zTree.getZTreeObj(treeControlID).getSelectedNodes();
            if ($.lumos.common.isNullOrEmpty(treeObj)) {
                art.dialog.alert("Please select a node on the left!");
            }
            else {
                var id = treeObj[0].id
                var l_Data = $("#form1").serializeArray();
                $.lumos.dataParmsPush(l_Data, "id", id);


                $.lumos.post({
                    url: "../Menu/UpdateMenu",
                    data:l_Data,
                    success: function (data) {
                        art.dialog.alert(data.message);
                        loadTreeList(id);

                    }
                });

            }
            return false;
        }

        function loadTreeList(id) {

            $.lumos.post({
                url: "../Menu/GetMenuTree?pId=0",
                success: function (data) {
                    var obj = eval(data.content);
                    $.fn.zTree.init($("#" + treeControlID), setting, obj);
                    var node = $.fn.zTree.getZTreeObj(treeControlID).getNodeByParam("id", id, null);
                    $.fn.zTree.getZTreeObj(treeControlID).selectNode(node);
                    $.lumos.common.setIframeObjectHeight(treeControlID);
                }
              });
        }

  //-->
    </script>
}

<div class="gbr gbr-maintitle" id="gbr-maintitle">
    <div class="wrapper">
        <div class="content">
            <span class="title-icon">@ViewBag.Title</span>
            <span class="title-message"></span>
        </div>
    </div>
</div>

<div class="gbr gbr-mainbody" id="gbr-mainbody">
    <div class="wrapper">
        <div class="content">
            <form name="form1" method="post" id="form1">
                @AntiForgery.GetHtml()
                <table cellpadding="0" cellspacing="0" class="table-tabtree">
                    <tr>
                        <td class="left-tree">
                            <ul id="treemenu" class="ztree"></ul>
                        </td>
                        <td class="right-tab">

                            <div class="tab" id="tabbox">
                                <div class="tab-item">
                                    <ul>
                                        <li class="item first selected"><a class="a-btn-info" href="javascript:void(0)">Basic Information </a></li>
                                    </ul>
                                </div>
                                <div class="tab-content">
                                    <div class="content" style="display:block">
                                        <div class="f-btn-area">
                                            <a id="abtn_Add" class="a-btn-add" href="javascript:void(0)" target="_self">Add Sub Menu</a>
                                            <a id="abtn_Del" class="a-btn-del hide" href="javascript:void(0)">Delete Menu </a>
                                            <a id="abtn-Sort" class="a-btn-sort lumos_opfun" href="javascript:void(0)">Modified Sort</a>
                                        </div>

                                        <table class="f-tb" cellpadding="0" cellspacing="1">
                                            <tr>
                                                <td class="f-tb-t">
                                                    Parent Name：
                                                </td>
                                                <td class="f-tb-c">
                                                    <label id="lbl_PName">/</label>
                                                    <input name="txt_PName" type="hidden" id="txt_PName" />
                                                    <input name="txt_PId" type="hidden" id="txt_PId" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="f-tb-t">
                                                    Name：
                                                </td>
                                                <td class="f-tb-c">
                                                    <input name="txt_Name" type="text" autocomplete="off" id="txt_Name" style="width: 250px;" class="form-control" />
                                                    <span id="txt_NameTip"></span>
                                                </td>
                                            </tr>
                                            <tr class="tr_url">
                                                <td class="f-tb-t">
                                                    Url：
                                                </td>
                                                <td class="f-tb-c">
                                                    <input name="txt_Url" type="text" autocomplete="off" id="txt_Url"
                                                           class="form-control" style="width: 350px;" />
                                                    @*<span id="txt_UrlTip"></span>*@
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="f-tb-t">
                                                    Permission：
                                                </td>
                                                <td class="f-tb-c">

                                                    @for (int i = 0; i < Model.Permission.Count; i++)
                                                    {
                                                        if (Model.Permission[i].Id != "1")
                                                        {
                                                            <span>
                                                                <input id="cb_Permission_@i" type="checkbox" name="cb_Permission" value="@Model.Permission[i].Id" />
                                                                <label for="cb_Permission_@i">@Model.Permission[i].Name</label>
                                                            </span>
                                                        }
                                                    }

                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="f-tb-t">
                                                    Remark：
                                                </td>
                                                <td class="f-tb-c">
                                                    <textarea name="txt_Description" rows="5" cols="42" id="txt_Description" class="form-control"></textarea>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="f-tb-t">
                                                    &nbsp;
                                                </td>
                                                <td class="f-tb-c">
                                                    <input type="submit" name="btn_Save" value="Save" id="btn_Save" class="f-ctb-btn btn" />
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </div>
</div>