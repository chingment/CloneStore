
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Manager/Views/Shared/_LayoutHomeMainTree.cshtml";
}

@section scripts{
    <script type="text/javascript">
        <!--
        var setting = {
            view: {
                showLine: true,
                selectedMulti: false
            },
            data: {
                simpleData: { enable: true }
            },
            callback: {
                onClick: onClick
            }
        };

        function getSelectedNode() {
            var selObj = zTree.getSelectedNodes();
            if ($.lumos.isNullOrEmpty(selObj)) {
                art.dialog.tips("Please select the node on the left");
                return null;
            }
            return selObj[0];
        }

        function tabFun(index) {
            switch (index) {
                case 0:
                    getDetails();
                    break;
                case 1:
                    listRoleUser.loadData();
                    break;
                case 2:
                    loadRoleMenuTreeList()
                    break;
            }
        }

        var zTree;
        var listRoleUser
        var tabIndex = 0;
        $(this).ready(function () {

            $("#tab1").tab({
                beforeClick: function (index) {

                    var selObj = getSelectedNode();
                    if (selObj == null) {
                        return false;
                    }
                    tabIndex = index;
                    $("#txt_RoleId").val(selObj.id);

                    tabFun(index);


                    return true;
                }
            });

            loadTreeList();

            $.formValidator.initConfig({ formID: "form1", onError: function (msg) { }, onSuccess: function () { return update(); } });

            $("#txt_Name").formValidator({ onShow: "&nbsp;", onFocus: "Required,no more than 20 char", onCorrect: "&nbsp;" }).inputValidator({ min: 1, max: 20, onError: "Required,no more than 20 char" });
            $("#txt_Description").formValidator({ onShow: "&nbsp;", onFocus: "No more than 500 char", onCorrect: "&nbsp;", empty: true, onEmpty: "&nbsp;" }).inputValidator({ min: 0, max: 500, onError: "No more than 500 char" });

            $("#btn_add").click(function () {

                var selObj = getSelectedNode();
                if (selObj == null) {
                    return;
                }
                $.lumos.openDialog('../Role/Add?type=add&id=' + selObj.id + '&pName=' + escape(selObj.name), 'New', '650px', '350px');

            });

            $("#btn_delete").click(function () {


                var selObj = getSelectedNode();
                if (selObj == null) {
                    return;
                }


                    art.dialog.confirm(
                        "Confirm Delete [" + selObj.name + "]the node and it's children？",
                             function () {
                                 var id = selObj.id;
                                 var data = [];
                                 var nodes = zTree.getSelectedNodeFollowChildren();
                                 $.each(nodes, function (i, n) {
                                     data.push({ name: "id", value: n.id });
                                 });

                                 $.lumos.postJson({
                                     url: "../Role/Delete",
                                     data: data,
                                     success: function (data) {
                                         art.dialog.tips(data.message);
                                         loadTreeList();
                                     }
                                 });

                                 return true;
                             });


                return false;
            });

            $("#btn_add_roleuser").click(function () {

                var selObj = getSelectedNode();
                if (selObj == null) {
                    return;
                }
                $.lumos.openDialog('../Role/AddUserToRole?type=add&id=' + selObj.id + '&pName=' + escape(selObj.name), 'Add Role User', '650px', '550px');

            });


            $("#btn_save_rolemenu").click(function () {


                var selObj = getSelectedNode();
                if (selObj == null) {
                    return;
                }


                var nodes = zTreeRoleMenu.getCheckedNodes(true);

                var array = new Array();
                for (var key in nodes) {
                    array.push({ name: "menuIds", value: nodes[key].id });
                }

                var id = $("#txt_RoleId").val();

                array.push({ name: "roleId", value: id });

                $.lumos.postJson({
                    url: "../Role/SaveRoleMenu",
                    data: array,
                    success: function (data) {
                        art.dialog.tips(data.message);
                    }
                });
                return false;
            });

            listRoleUser=$("#list_table_roleuser").loadDataTable({
                url: "../Role/GetRoleUserList",
                pageIndex: 0,
                searchParams: $("#form2").serializeArray(),
                searchButtonId: "btn_Search",
                containerId: "form2",
                rowDataCombie: function (p_index, p_row) {
                    var l_Strlimt = "";
                    l_Strlimt += "@Html.IsInPermission("<a href=\\\"javascript:void(0)\\\" operate=\\\"delete\\\"  class=\\\"a-btn\\\" >Delete</a>")";
                    var l_StrRows = "";
                    l_StrRows += "<tr key=\'{\"UserId\":\"" + p_row.UserId + "\"}\'>";
                    l_StrRows += "<td class=\"no\" >" + (p_index + 1) + "</td>";
                    l_StrRows += "<td class=\"overflow tipitem\" title=\"" + p_row.UserName + "\"   >" + p_row.UserName + "</td>";
                    l_StrRows += "<td class=\"operation\">";
                    l_StrRows += l_Strlimt;
                    l_StrRows = l_StrRows.replace(/{key}/g, p_row.Id);
                    l_StrRows = l_StrRows.replace(/{title}/g, p_row.UserName);
                    l_StrRows += "</td>";
                    l_StrRows += "</tr>";
                    return l_StrRows;
                },
                operate: [
                    {
                        "delete": function (keys) {
                            var selObj = getSelectedNode();
                            if (selObj == null) {
                                return;
                            }
                            var array = new Array();
                            array.push({ name: "roleId", value: selObj.id });
                            $.each(keys, function (i, n) {
                                array.push({ name: "userIds", value: n.UserId });
                            });


                            $.lumos.postJson({
                                url: "../Role/RemoveUserFromRole",
                                data: array,
                                success: function (data) {
                                    listRoleUser.loadData(0);
                                    art.dialog.tips(data.message);
                                }
                            });

                        }
                    }

                ]
            });

        });

        function onClick(event, treeId, treeNode, clickFlag) {

            $("#txt_PName").defaultPassed();
            $("#txt_Name").defaultPassed();

            var parentName = "/";
            if (treeNode.getParentNode() != null) {
                parentName = treeNode.getParentNode().name;
                $(".a-btn-del").show();
            }
            else {
                $(".a-btn-del").hide();
            }
            $("#txt_RoleId").val(treeNode.id);
            $('#lbl_PName').text(parentName);

            tabFun(tabIndex)



        }

        function getDetails() {
            var id = $("#txt_RoleId").val();
            $.lumos.postJson({
                data: { roleId: id },
                url: "../Role/GetDetail",
                success: function (data) {
                    $("#txt_Id").val(data.content.PId);
                    $("#txt_Name").val(data.content.Name);
                    $("#txt_Description").val(data.content.Description);
                }
            });
        }

        function loadTreeList(id) {

            $.lumos.postJson({
                url: "../Role/GetRoleTree",
                success: function (data) {
                    var obj = eval(data.content);
                    zTree = $.fn.zTree.init($("#treemenu"), setting, obj);
                    var node = zTree.getNodeByParam("id", id, null);
                    zTree.selectNode(node);
                }
            });

        }

        function update() {

            var selObj = getSelectedNode();
            if (selObj == null) {
                return false;
            }
            var id = selObj.id;
            var l_Data = $("#form1").serializeArray();
            l_Data.push({name:"Id",value:id});
            $.lumos.postJson({
                url: "../Role/Update",
                data: l_Data,
                success: function (data) {
                    art.dialog.tips(data.message);
                    loadTreeList(id);

                }
            });
            return false;
        }



        var settingTreeRoleMenu = {
            view: {
                selectedMulti: false
            },
            check: {
                enable: true
            },
            data: {
                simpleData: {
                    enable: true
                },
                key: {
                    url: "_url"
                }

            }
        };

        var zTreeRoleMenu;
        function loadRoleMenuTreeList() {
            var id = $("#txt_RoleId").val();
            $.lumos.postJson({
                url: "../Role/GetRoleMenuTreeList",
                data: { roleId: id },
                success: function (data) {
                    var zNodes = data.content;
                    zTreeRoleMenu = $.fn.zTree.init($("#rolemenu_tree"), settingTreeRoleMenu, zNodes);
                }
            });

        }


        //-->
    </script>
}


<dl class="tree-tab">
    <dd class="tree-tab-left">
        <ul id="treemenu" class="ztree"></ul>
    </dd>
    <dd class="tree-tab-right">
        <div class="tab" id="tab1">
            <div class="tab-item"> 
                <ul>
                    <li class="item First selected"><a class="a-btn-info" href="javascript:void(0)">Basic information</a></li>
                    <li class="item"><a class="a-btn-info" href="javascript:void(0)">Related Users</a></li>
                    <li class="item"><a class="a-btn-info" href="javascript:void(0)">Related Menus</a></li>
                </ul>
            </div>
            <div class="tab-content">
                <div class="subcontent">
                    <div class="f-btn-area" style="margin-bottom:5px;">
                        <input type="button" class="btn btn-add" id="btn_add" value="New" style="margin-right:5px;" /><input type="button" class="btn btn-delete" id="btn_delete" value="Delete" />
                    </div>
                    <form name="form1" method="post" id="form1">
                        @AntiForgery.GetHtml()
                        <table class="f-tb" cellpadding="0" cellspacing="1">
                            <tr>
                                <td class="f-tb-t">
                                    Parent：
                                </td>
                                <td class="f-tb-c">
                                    <label id="lbl_PName">/</label>
                                    <input name="PId" type="hidden" id="txt_PId" />
                                </td>
                            </tr>
                            <tr>
                                <td class="f-tb-t">
                                    Name：
                                </td>
                                <td class="f-tb-c">
                                    <input name="Name" type="text" autocomplete="off" value="" id="txt_Name" style="width: 250px;" class="input-control" />
                                    <span id="txt_NameTip"></span>
                                </td>
                            </tr>
                            <tr>
                                <td class="f-tb-t">
                                    Remarks：
                                </td>
                                <td class="f-tb-c">
                                    <textarea name="Description" rows="5" cols="42" id="txt_Description" class="input-control"></textarea>
                                    <span id="txt_DescriptionTip"></span>
                                </td>
                            </tr>
                            <tr>
                                <td class="f-tb-t"></td>
                                <td class="f-tb-c">
                                    <input type="submit" name="btn_Save" value="Save" id="btn_Save" class="btn btn-save" />
                                </td>
                            </tr>
                        </table>
                    </form>
                </div>
                <div class="subcontent">
                    <form id="form2" name="form2">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="RoleId" id="txt_RoleId" />
                        <div class="search-bar">
                            <div class="filter">
                                <span class="filter-label">UserName：</span>
                                <span class="filter-input">
                                    <input type="text" class="input-control" name="UserName" style="width:120px;" />
                                </span>
                            </div>
                            <div class="filter"><input type="button" class="btn btn-search" id="btn_Search" value="Search" /> </div>

                            <div class="filter" style="float:right"><input type="button" class="btn btn-add" id="btn_add_roleuser" value="Add" /><input type="button" class="btn btn-delete" id="btn_Add" value="Delete" multiple="true" operate="delete" style="margin-left:5px" />  </div>
                        </div>
                        <div class="list">
                            <table id="list_table_roleuser" class="list-tb" cellpadding="0" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th style="width:15%" class="no">
                                            <input type="checkbox" name="list_table_ckb" childname="list_table_ckb_child" />
                                        </th>
                                        <th style="width:15%">
                                            UserName
                                        </th>
                                        <th style="width:10%" class="operation">
                                            Operate
                                        </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="7">
                                            <div class="pull-left">

                                            </div>
                                            <div class="pull-right pagination">
                                                <div class="pagination-info">

                                                </div>
                                                <div class="pagination-index">

                                                </div>
                                                <div class="pagination-goto">

                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </form>
                </div>
                <div class="subcontent">
                    <form id="form3" name="form3">
                        <ul id="rolemenu_tree" class="ztree"></ul>
                        <div class="f-btn-area" style="margin-bottom:5px; text-align:center">
                            <input type="button" class="btn btn-save" id="btn_save_rolemenu" value="Save" style="margin-right:5px;" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </dd>
</dl>


